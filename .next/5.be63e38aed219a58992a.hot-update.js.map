{"version":3,"file":"5.be63e38aed219a58992a.hot-update.js","sources":["webpack:///components/Conversation.js"],"sourcesContent":["import ChatBot from 'react-simple-chatbot';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport base from '../base';\r\n\r\nclass Image extends React.Component {\r\n  render() {\r\n      return (\r\n          <img src=\"https://j.gifs.com/kZkzpv.gif\" />\r\n      )\r\n  }\r\n}\r\n\r\nclass ImageTwo extends React.Component {\r\n  render() {\r\n      return (\r\n          <img src=\"https://j.gifs.com/0VN4WN.gif\" />\r\n      )\r\n  }\r\n}\r\n\r\nclass Review extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      phone: '',\r\n      address: '',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { steps } = this.props;\r\n    const { name, phone, address } = steps;\r\n\r\n\r\n    this.setState({ name, phone, address });\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n      const order = {\r\n          name: this.state.name.value,\r\n          phone: this.state.phone.value,\r\n          address: this.state.address.value\r\n      }\r\n  console.log(order)\r\n  \r\n        this.ref = base.push('orders', {\r\n          data: order\r\n        }).then(() => {\r\n          //Router.transitionTo('dashboard');\r\n        }).catch(err => {\r\n          // handle error\r\n          console.log(err)\r\n        })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { name, phone, address } = this.state;\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <h3>Ваши данные</h3>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Имя:</td>\r\n              <td>{name.value}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Адрес:</td>\r\n              <td>{address.value}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Телефон:</td>\r\n              <td>{phone.value}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReview.propTypes = {\r\n  steps: PropTypes.object,\r\n};\r\n\r\nReview.defaultProps = {\r\n  steps: undefined,\r\n};\r\n\r\n\r\n\r\nclass Conversation extends React.Component {\r\n  // trackWindow = () => {\r\n  //   const mobile = window.matchMedia(\"(max-width: 500px)\").matches ? true : false;\r\n  //   console.log(mobile)\r\n  // }\r\n  render() {\r\n\r\n      return (\r\n          <ChatBot \r\n\r\n          headerComponent={<h1 className=\"front-header\" key={22}>Трезвый Водитель от <span key={11}>800</span>₽!</h1>}\r\n          //headerComponent={\"Трезвый Водитель\"}\r\n          //headerTitle={\"Лелик поможет тебе заказать трезвого водителя:\"}\r\n          userAvatar={'http://res.cloudinary.com/dlmeqtsfq/image/upload/c_scale,h_70,q_70/v1530714044/Drive/semen70x70.png'}\r\n          botAvatar={'http://res.cloudinary.com/dlmeqtsfq/image/upload/c_scale,h_70,q_auto/v1530715032/Drive/papanov70x70.png'}\r\n          steps={[\r\n\r\n              {\r\n                  id: '1',\r\n                  message: 'Ну, что...Выпил и хочешь заказать трезвого водителя?',\r\n                  trigger: '2',\r\n              },\r\n              {\r\n                  id: '2',\r\n                  component: <Image />,\r\n                  trigger: '3',\r\n              },\r\n\r\n              {\r\n                  id: '3',\r\n                  options: [\r\n                  { value: 1, label: 'Хочу Заказать!', trigger: '5' },\r\n                  { value: 2, label: 'Нет', trigger: '4' },\r\n                  ],\r\n              },\r\n              {\r\n                  id: '4',\r\n                  message: 'Тогда бросай машину и езжай на метро!',\r\n                  end: true,\r\n              },\r\n              {\r\n                  id: '5',\r\n                  message: 'Отлично - как тебя зовут?',\r\n                  trigger: 'name',\r\n              },\r\n\r\n\r\n                {\r\n                  id: 'name',\r\n                  user: true,\r\n                  trigger: '7',\r\n                },\r\n                {\r\n                  id: '7',\r\n                  message: 'Привет {previousValue}! Напиши мне свой телефон!',\r\n                  trigger: 'phone',\r\n                },\r\n\r\n                {\r\n                  id: 'phone',\r\n                  user: true,\r\n                  trigger: '9',\r\n                },\r\n\r\n                {\r\n                  id: '9',\r\n                  message: 'Так... Теперь введи свой адрес:',\r\n                  trigger: 'address',\r\n                },\r\n\r\n                {\r\n                  id: 'address',\r\n                  user: true,\r\n                  trigger: '11',\r\n                },\r\n\r\n                {\r\n                  id: '11',\r\n                  message: 'Отлично! Проверь, что все правильно:',\r\n                  //end: true\r\n                  trigger: 'review',\r\n                },\r\n                {\r\n                  id: 'review',\r\n                  component: <Review />,\r\n                  asMessage: true,\r\n                  trigger: 'update',\r\n                  //end: true\r\n                },\r\n                {\r\n                  id: 'update',\r\n                  message: 'Хочешь что-нибудь поправить?',\r\n                  trigger: 'update-question',\r\n                },\r\n                {\r\n                  id: 'update-question',\r\n                  options: [\r\n                    { value: 'yes', label: 'Да', trigger: 'update-yes' },\r\n                    { value: 'no', label: 'Нет', trigger: 'pre-end-message' },\r\n                  ],\r\n                },\r\n                {\r\n                  id: 'update-yes',\r\n                  message: 'Какую информацию поправить?',\r\n                  trigger: 'update-fields',\r\n                },\r\n                {\r\n                  id: 'update-fields',\r\n                  options: [\r\n                    { value: 'name', label: 'Имя', trigger: 'update-name' },\r\n                    { value: 'address', label: 'Адрес', trigger: 'update-address' },\r\n                    { value: 'phone', label: 'Телефон', trigger: 'update-phone' },\r\n                  ],\r\n                },\r\n                {\r\n                  id: 'update-name',\r\n                  message: 'Введи правильное имя:',\r\n                  trigger: 'update-name-action',\r\n                },\r\n                {\r\n                  id: 'update-name-action',\r\n                  update: 'name',\r\n                  trigger: '11',\r\n                },\r\n                {\r\n                  id: 'update-phone',\r\n                  message: 'Введи правильный номер:',\r\n                  trigger: 'update-phone-action',\r\n                },\r\n                {\r\n                  id: 'update-phone-action',\r\n                  update: 'phone',\r\n                  trigger: '11',\r\n                },\r\n                {\r\n                  id: 'update-address',\r\n                  message: 'Введи правильный адрес:',\r\n                  trigger: 'update-address-action',\r\n                },\r\n                {\r\n                  id: 'update-address-action',\r\n                  update: 'address',\r\n                  trigger: '11',\r\n                },\r\n\r\n                {\r\n                  id: 'pre-end-message',\r\n                  component: <ImageTwo />,\r\n                  trigger: 'end-message',\r\n              },\r\n\r\n                {\r\n                  id: 'end-message',\r\n                  message: 'Спасибо! Все записали - сейчас позвоним тебе и подтвердим заказ!',\r\n                  end: true,\r\n                },\r\n\r\n              \r\n            ]}\r\n          />\r\n      )\r\n  }\r\n}\r\n\r\n\r\nexport default Conversation;\n\n\n// WEBPACK FOOTER //\n// components/Conversation.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AALA;AACA;AAOA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AALA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAHA;AAQA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA9DA;AACA;AAgEA;AACA;AADA;AAIA;AACA;AADA;AACA;AAKA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAJA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AALA;AASA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AA/IA;AAAA;AAAA;AAAA;AAAA;AAyJA;;;;AAjKA;AACA;AAoKA;;;;A","sourceRoot":""}